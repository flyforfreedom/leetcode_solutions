/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode *detectCycle(struct ListNode *head) {
    
    if(!head || !head->next) return NULL;
    if(head->next == head) return head;
    
    struct ListNode *p1 = head->next;
    struct ListNode *p2 = head->next->next;
    
    if(!p2) return NULL;
    
    while(p1 || p2)
    {
        if(p1 != p2)
        {
            if(p1)p1 = p1->next;
            
            if(p2 && p2->next)
            {
                p2 = p2->next->next;
            }
            else p2 = NULL;
        }
        else 
        {
            break;
        }
    }
    
    if(!p1 || !p2) return NULL;
    
    if(p1 != p2) return NULL;
    
    p1 = head;
    
    while(p1 || p2)
    {
        if(p1 == p2)
        {
            return p1;
        }
        else
        {
            p1 = p1->next;
            p2 = p2->next;
        }
    }
    
}
