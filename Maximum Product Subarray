void swap(int& max, int& min)
{
    int temp = max;
    max = min;
    min = temp;
}

#define MAX(a, b) ((a)>(b))?(a):(b)
#define MIN(a, b) ((a)<(b))?(a):(b)

class Solution {
public:
    int maxProduct(vector<int>& nums) {
        
        if(nums.size() == 1) return  *nums.begin();
               
        int ret;

        vector<int>::iterator iter = nums.begin();

        ret = *iter;

        int max = ret;
        int min = ret;

        for(iter++; iter != nums.end(); ++iter)
        {
            if(*iter < 0)
            {
                swap(max, min);
            }

            max = MAX(*iter, *iter * max);
            min = MIN(*iter, *iter * min);

            ret = MAX(ret, max);
        }


        return  ret;        
    }
};
