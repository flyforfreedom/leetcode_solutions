class Stack {
public:

    Stack()
    {
        qnum = 1;
    }
    // Push element x onto stack.
    void push(int x) {
        
        if(q1.empty())
        {
            q1.push(x);
            qnum = 1;
        }
        else if(q2.empty())
        {
            q2.push(x);
            qnum = 2;
        }
        else if(qnum == 1)
        {
            while(!q2.empty())
            {
                q1.push(q2.front());
                q2.pop();
            }
            q2.push(x);
            qnum = 2;
        }
        else if(qnum == 2)
        {
            while(!q1.empty())
            {
                q2.push(q1.front());
                q1.pop();
            }
            q1.push(x);   
            qnum = 1;
        }
    }

    // Removes the element on top of the stack.
    void pop() {
        
        if(qnum == 1)
        {
            if(!q1.empty()) q1.pop();
            
            if(q1.empty()) qnum = 2;
        }
        else if(qnum == 2)
        {
            if(!q2.empty()) q2.pop();
            
            if(q2.empty()) qnum = 1;
        }
    }

    // Get the top element.
    int top() {
       
        if(qnum == 1)
        {
            if(!q1.empty()) return q1.front();
        }
        else if(qnum == 2)
        {
            if(!q2.empty()) return q2.front();
        }        
    }

    // Return whether the stack is empty.
    bool empty() {
        
        return q1.empty() && q2.empty();
    }
    
private:

    queue<int> q1;
    queue<int> q2;
    
    int qnum;
};
