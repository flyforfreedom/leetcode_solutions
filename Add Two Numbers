/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    
   if(!l1) return l2;    
   if(!l2) return l1; 
 
   struct ListNode* pSum = NULL;

   struct ListNode* p1 = l1; 
   struct ListNode* p2 = l2; 
   struct ListNode* pEnd = NULL; 

   int carry = 0;
   
   while(p1 || p2) 
   {   
      struct ListNode* pNew = malloc(sizeof(*pNew));
      pNew->next = NULL;
      
      if(!pSum) 
      {   
         printf("pSum\n");
         pSum = pNew;
      }   
      else 
      {   
         pEnd->next = pNew;
      }   
     
      pEnd = pNew;

      if(p1 && p2) 
      {
         //printf("p1&&p2\n");
         pNew->val = (p1->val + p2->val + carry) % 10;
         carry = (p1->val + p2->val + carry) / 10;
         
         p1 = p1->next;
         p2 = p2->next;
      }
      else if(p1)
      {
         //printf("p1\n");
         pNew->val = (p1->val + carry) % 10;
         carry = (p1->val + carry) / 10;
         
         p1 = p1->next;
      }
      else if(p2)
      {
         //printf("p2\n");
         pNew->val = (p2->val + carry) % 10;
         carry = (p2->val + carry) / 10;
         
         p2 = p2->next;
      }
   }

   if(carry != 0)
   {
      struct ListNode* pNew = malloc(sizeof(*pNew));
      pNew->next = NULL;  //Take care
      pEnd->next = pNew;
      pNew->val = carry;
   }

   return pSum;
}
