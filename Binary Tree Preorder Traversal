/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        
        vector<int> v_ret;
        
        if(!root) return v_ret;
        
        stack<TreeNode*> s;
        
        s.push(root);
        TreeNode* top = s.top();
        v_ret.push_back(top->val);
        
        while(!s.empty())
        {
            while(top && top->left)
            {
                s.push(top->left);
                v_ret.push_back(top->left->val);
                top = top->left;
            }
            
            top = s.top();
            
            if(top && top->right)
            {
                cout << "top->right" << endl;
                s.pop();
                s.push(top->right);
                v_ret.push_back(top->right->val);
                top = top->right;
            }
            else if(top)
            {
                cout << "top" << endl;
                s.pop();
                top = NULL;
            }
        }
        
        cout << "hhaha" << endl;
        
        return v_ret;
    }
};
